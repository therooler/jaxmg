name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # CPU tests - run on all PRs and pushes
  test-cpu:
    name: CPU Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
        devices: [1, 2, 4]
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
    
    - name: Run CPU tests (${{ matrix.devices }} devices)
      run: |
        cd tests && python cpu_runner.py ${{ matrix.devices }}
    
    - name: Run example tests (once)
      if: matrix.python-version == '3.11' && matrix.devices == 1
      run: |
        pytest tests/test_examples.py tests/test_launch_cpu.py -v

  # GPU tests - only run on main branch or when requested
  test-gpu:
    name: GPU Tests  
    runs-on: gpu-linux
    if: github.ref == 'refs/heads/main' || contains(github.event.pull_request.labels.*.name, 'test-gpu')
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
    
    - name: Check GPU setup
      run: |
        nvidia-smi
        python -c "import jax; gpu_devs = [d for d in jax.devices() if d.platform == 'gpu']; print(f'Found {len(gpu_devs)} GPU(s)'); [print(f'  {d}') for d in gpu_devs]"
    
    - name: Run GPU tests
      run: |
        pytest tests/test_potrs.py tests/test_potri.py tests/test_syevd.py tests/test_*_interface.py -v